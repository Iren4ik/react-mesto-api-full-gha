{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/dev/react-mesto-auth/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  card,\n  onCardClick,\n  onCardLike,\n  onTrashClick\n}) {\n  _s();\n  // Подписываемся на контекст CurrentUserContext\n  // React.useContext возвращает значение контекста, которое передано в пропс value провайдера\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(card => card._id === currentUser._id);\n\n  // Создаём переменную, которую зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `elements__like ${isLiked && 'elements__like_active'}`;\n  function handleClick() {\n    onCardClick(card);\n  }\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n  function handleTrashClick() {\n    onTrashClick(card);\n  }\n\n  // Далее в разметке используем переменную для условного рендеринга\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"elements__element\",\n    children: [isOwn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"elements__trash opacity\",\n      type: \"button\",\n      onClick: handleTrashClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elements__photo opacity\",\n      src: card.link,\n      alt: card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements__caption\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"elements__place\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elements__like-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elements__like-counter\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","CurrentUserContext","jsxDEV","_jsxDEV","Card","card","onCardClick","onCardLike","onTrashClick","_s","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","cardLikeButtonClassName","handleClick","handleLikeClick","handleTrashClick","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","link","alt","name","length","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/dev/react-mesto-auth/src/components/Card.js"],"sourcesContent":["import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onTrashClick }) {\r\n  // Подписываемся на контекст CurrentUserContext\r\n  // React.useContext возвращает значение контекста, которое передано в пропс value провайдера\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((card) => card._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `elements__like ${isLiked && 'elements__like_active'}`\r\n  );\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleTrashClick() {\r\n    onTrashClick(card)\r\n  }\r\n\r\n  // Далее в разметке используем переменную для условного рендеринга\r\n  return (\r\n    <li className=\"elements__element\">\r\n      {isOwn && <button className=\"elements__trash opacity\" type=\"button\" onClick={handleTrashClick} />}\r\n      <img className=\"elements__photo opacity\" src={card.link} alt={card.name} onClick={handleClick} />\r\n      <div className=\"elements__caption\">\r\n        <h2 className=\"elements__place\">{card.name}</h2>\r\n        <div className=\"elements__like-container\">\r\n          <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick} />\r\n          <p className=\"elements__like-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC7D;EACA;EACA,MAAMC,WAAW,GAAGV,KAAK,CAACW,UAAU,CAACV,kBAAkB,CAAC;;EAExD;EACA,MAAMW,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAACC,GAAG,KAAKJ,WAAW,CAACI,GAAG;;EAEhD;EACA,MAAMC,OAAO,GAAGV,IAAI,CAACW,KAAK,CAACC,IAAI,CAAEZ,IAAI,IAAKA,IAAI,CAACS,GAAG,KAAKJ,WAAW,CAACI,GAAG,CAAC;;EAEvE;EACA,MAAMI,uBAAuB,GAC1B,kBAAiBH,OAAO,IAAI,uBAAwB,EACtD;EAED,SAASI,WAAWA,CAAA,EAAG;IACrBb,WAAW,CAACD,IAAI,CAAC;EACnB;EAEA,SAASe,eAAeA,CAAA,EAAG;IACzBb,UAAU,CAACF,IAAI,CAAC;EAClB;EAEA,SAASgB,gBAAgBA,CAAA,EAAG;IAC1Bb,YAAY,CAACH,IAAI,CAAC;EACpB;;EAEA;EACA,oBACEF,OAAA;IAAImB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC9BX,KAAK,iBAAIT,OAAA;MAAQmB,SAAS,EAAC,yBAAyB;MAACE,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjG1B,OAAA;MAAKmB,SAAS,EAAC,yBAAyB;MAACQ,GAAG,EAAEzB,IAAI,CAAC0B,IAAK;MAACC,GAAG,EAAE3B,IAAI,CAAC4B,IAAK;MAACR,OAAO,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjG1B,OAAA;MAAKmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCpB,OAAA;QAAImB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAElB,IAAI,CAAC4B;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChD1B,OAAA;QAAKmB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvCpB,OAAA;UAAQmB,SAAS,EAAEJ,uBAAwB;UAACM,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEL;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtF1B,OAAA;UAAGmB,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAElB,IAAI,CAACW,KAAK,CAACkB;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET;AAACpB,EAAA,CA1CQL,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA4Cb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}