{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { api } from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ProtectedRouteElement from \"./ProtectedRoute\";\nimport { register, authorize, getContent } from \"../utils/auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [isPreloading, setPreloading] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cardToDelete, setCardToDelete] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState();\n  const [isRegister, setIsRegister] = React.useState(false);\n  const navigate = useNavigate();\n\n  //Получение данных пользователя и карточек, если залогинился\n  React.useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getProfileInfo(), api.getInitialCards()]).then(([dataUser, dataCards]) => {\n        setCurrentUser(dataUser);\n        setCards(dataCards);\n      }).catch(console.error);\n    }\n  }, [loggedIn]);\n\n  //Проверка токена при загрзке страницы\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    if (token) {\n      getContent(token).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n          navigate('/', {\n            replace: true\n          });\n        }\n      }).catch(console.error);\n    }\n  }, []);\n\n  // Открытие попапа ававтара\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  // Открытие попапа реадиктирования попапа\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  // Открытие попапа добавления карточки\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  // Открытие попапа удаления карточки\n  function handleDeleteCardClick(card) {\n    setDeleteCardPopupOpen(true);\n    setCardToDelete(card);\n  }\n\n  // Открытие попапа успешной или не совсем регистрации\n  function infoTooltipPopupOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  // Открытие выбранной карточки\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Закрытие попапов\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setDeleteCardPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard(null);\n    setCardToDelete({});\n  }\n\n  //универсальная функция, принимающая функцию запроса\n  function handleSubmit(request) {\n    // изменяем текст кнопки до вызова запроса\n    setPreloading(true);\n    request().then(closeAllPopups).catch(console.error)\n    // возвращаем обратно начальный текст кнопки\n    .finally(() => setPreloading(false));\n  }\n\n  // Поставить лайк\n  function handleCardLike(card) {\n    function makeRequest() {\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n      // return позволяет дальше продолжать цепочку then, catch, finally\n      return api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Удалить карточку\n  function handleCardDelete(card) {\n    function makeRequest() {\n      return api.deleteCard(card._id).then(() => {\n        setCards(state => state.filter(c => c._id !== card._id));\n      }).catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  //Обновить данные профиля\n  function handleUpdateUser(inputValues) {\n    function makeRequest() {\n      return api.setUserInfo(inputValues).then(dataUser => {\n        setCurrentUser(dataUser);\n      }).catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Обновить аватар\n  function handleUpdateAvatar(inputValue) {\n    function makeRequest() {\n      return api.setUserAvatar(inputValue).then(dataUser => {\n        setCurrentUser(dataUser);\n      }).catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Добавить карточку\n  function handleAddPlaceSubmit(inputValue) {\n    function makeRequest() {\n      return api.postNewCard(inputValue).then(newCard => {\n        setCards([newCard, ...cards]);\n      }).catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  //Обработка запроса на регистрацию\n  function handleRegister(email, password) {\n    register(email, password).then(res => {\n      if (res) {\n        setIsRegister(true);\n        infoTooltipPopupOpen();\n        navigate('/sign-in', {\n          replace: true\n        });\n      } else {\n        infoTooltipPopupOpen();\n        setIsRegister(false);\n      }\n    }).catch(() => {\n      infoTooltipPopupOpen();\n      setIsRegister(false);\n      console.error();\n    });\n  }\n\n  //Изменение статуса логина\n  function handleLoggedIn() {\n    setLoggedIn(true);\n  }\n\n  //Обработка запроса на авторизацию\n  function handleLogin(email, password) {\n    authorize(email, password).then(data => {\n      if (data.token) {\n        setEmail(email);\n        handleLoggedIn();\n        navigate('/', {\n          replace: true\n        });\n      }\n    }).catch(() => {\n      setLoggedIn(false);\n      infoTooltipPopupOpen();\n      console.error();\n    });\n  }\n\n  //Выход из системы\n  function handleLogout() {\n    setLoggedIn(false);\n    localStorage.removeItem(\"token\");\n    navigate(\"/sign-in\");\n  }\n\n  //«Внедряем» данные из currentUser с помощью провайдера\n  //пропс value содержит значение, которое распространаяется дочерним элементам\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onLogout: handleLogout,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRouteElement, {\n            loggedIn: loggedIn,\n            element: Main,\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onTrashClick: handleDeleteCardClick,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        isConfirmed: isRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        isPreloading: isPreloading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isPreloading: isPreloading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        isPreloading: isPreloading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopupOpen,\n        onClose: closeAllPopups,\n        isPreloading: isPreloading,\n        card: cardToDelete,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H1ALzIgm1B3ib4XByzmD/W2hZ1A=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","useNavigate","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","DeleteCardPopup","InfoTooltip","Login","Register","api","CurrentUserContext","ProtectedRouteElement","register","authorize","getContent","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeleteCardPopupOpen","setDeleteCardPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isPreloading","setPreloading","currentUser","setCurrentUser","cards","setCards","selectedCard","setSelectedCard","cardToDelete","setCardToDelete","loggedIn","setLoggedIn","email","setEmail","isRegister","setIsRegister","navigate","useEffect","Promise","all","getProfileInfo","getInitialCards","then","dataUser","dataCards","catch","console","error","token","localStorage","getItem","res","data","replace","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeleteCardClick","card","infoTooltipPopupOpen","handleCardClick","closeAllPopups","handleSubmit","request","finally","handleCardLike","makeRequest","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","inputValues","setUserInfo","handleUpdateAvatar","inputValue","setUserAvatar","handleAddPlaceSubmit","postNewCard","handleRegister","password","handleLoggedIn","handleLogin","handleLogout","removeItem","Provider","value","children","className","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onRegister","onLogin","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardLike","onTrashClick","isOpen","onClose","isConfirmed","onUpdateUser","onUpdateAvatar","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { api } from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ProtectedRouteElement from \"./ProtectedRoute\";\nimport {register, authorize, getContent} from \"../utils/auth.js\"\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [isPreloading, setPreloading] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cardToDelete, setCardToDelete] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState();\n  const [isRegister, setIsRegister] = React.useState(false);\n\n  const navigate = useNavigate();\n\n  //Получение данных пользователя и карточек, если залогинился\n  React.useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([dataUser, dataCards]) => {\n        setCurrentUser(dataUser);\n        setCards(dataCards);\n      })\n      .catch(console.error);\n    }\n  }, [loggedIn]);\n\n  //Проверка токена при загрзке страницы\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    if (token){\n      getContent(token)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            setEmail(res.data.email);\n            navigate('/', {replace: true})\n          }\n        })\n        .catch(console.error);\n    }\n  }, []);\n\n  // Открытие попапа ававтара\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  // Открытие попапа реадиктирования попапа\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  // Открытие попапа добавления карточки\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  // Открытие попапа удаления карточки\n  function handleDeleteCardClick(card) {\n    setDeleteCardPopupOpen(true);\n    setCardToDelete(card);\n  }\n\n  // Открытие попапа успешной или не совсем регистрации\n  function infoTooltipPopupOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  // Открытие выбранной карточки\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Закрытие попапов\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setDeleteCardPopupOpen(false);\n    setIsInfoTooltipOpen(false)\n    setSelectedCard(null);\n    setCardToDelete({});\n  }\n\n  //универсальная функция, принимающая функцию запроса\n  function handleSubmit(request) {\n    // изменяем текст кнопки до вызова запроса\n    setPreloading(true);\n    request()\n      .then(closeAllPopups)\n      .catch(console.error)\n      // возвращаем обратно начальный текст кнопки\n      .finally(() => setPreloading(false));\n  }\n\n  // Поставить лайк\n  function handleCardLike(card) {\n    function makeRequest() {\n      const isLiked = card.likes.some((i) => i._id === currentUser._id);\n      // return позволяет дальше продолжать цепочку then, catch, finally\n      return api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n        })\n        .catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Удалить карточку\n  function handleCardDelete(card) {\n    function makeRequest() {\n      return api.deleteCard(card._id)\n        .then(() => {\n          setCards((state) => state.filter((c) => c._id !== card._id));\n        })\n        .catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  //Обновить данные профиля\n  function handleUpdateUser(inputValues) {\n    function makeRequest() {\n      return api.setUserInfo(inputValues)\n        .then((dataUser) => {\n          setCurrentUser(dataUser);\n        })\n        .catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Обновить аватар\n  function handleUpdateAvatar(inputValue) {\n    function makeRequest() {\n      return api.setUserAvatar(inputValue)\n        .then((dataUser) => {\n          setCurrentUser(dataUser);\n        })\n        .catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  // Добавить карточку\n  function handleAddPlaceSubmit(inputValue) {\n    function makeRequest() {\n      return api.postNewCard(inputValue)\n        .then((newCard) => {\n          setCards([newCard, ...cards]);\n        })\n        .catch(console.error);\n    }\n    handleSubmit(makeRequest);\n  }\n\n    //Обработка запроса на регистрацию\n    function handleRegister(email, password) {\n      register(email, password)\n      .then((res) => {\n        if (res) {\n          setIsRegister(true);\n          infoTooltipPopupOpen();\n          navigate('/sign-in', {replace: true});\n        } else {\n          infoTooltipPopupOpen();\n          setIsRegister(false);\n        }\n      })\n      .catch(() => {\n        infoTooltipPopupOpen();\n        setIsRegister(false);\n        console.error();\n      })\n    }\n  \n    //Изменение статуса логина\n    function handleLoggedIn() {\n      setLoggedIn(true);\n    }\n  \n    //Обработка запроса на авторизацию\n    function handleLogin(email, password) {\n      authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          setEmail(email);\n          handleLoggedIn();\n          navigate('/', {replace: true})\n        }\n      })\n      .catch(() => {\n        setLoggedIn(false);\n        infoTooltipPopupOpen();\n        console.error();\n      })\n    }\n  \n    //Выход из системы\n    function handleLogout() {\n      setLoggedIn(false);\n      localStorage.removeItem(\"token\");\n      navigate(\"/sign-in\");\n    }\n\n  //«Внедряем» данные из currentUser с помощью провайдера\n  //пропс value содержит значение, которое распространаяется дочерним элементам\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header onLogout={handleLogout} email={email}/>\n\n        <Routes>\n          <Route path=\"/sign-up\" element={<Register onRegister={handleRegister}/>} />\n          <Route path=\"/sign-in\" element={<Login onLogin={handleLogin}/>} />\n          {/* <Route path='*' \n              element={loggedIn ? (<Navigate to='/' replace/>) : (<Navigate to='/sign-in'replace/>)} \n          /> */}\n          <Route\n            path=\"/\"\n            element={<ProtectedRouteElement \n              loggedIn={loggedIn} \n              element={Main}\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onTrashClick={handleDeleteCardClick}\n                cards={cards}\n            />} \n          />\n        </Routes>\n\n        <Footer />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isConfirmed={isRegister}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isPreloading={isPreloading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isPreloading={isPreloading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isPreloading={isPreloading}\n        />\n        <DeleteCardPopup\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          isPreloading={isPreloading}\n          card={cardToDelete}\n          onCardDelete={handleCardDelete}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,qBAAqB,MAAM,kBAAkB;AACpD,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,sBAAsB,EAAEC,uBAAuB,CAAC,GAAG1B,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAM,CAACC,mBAAmB,EAAEC,oBAAoB,CAAC,GAAG7B,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACG,qBAAqB,EAAEC,sBAAsB,CAAC,GAAG/B,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACK,qBAAqB,EAAEC,sBAAsB,CAAC,GAAGjC,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACS,YAAY,EAAEC,aAAa,CAAC,GAAGrC,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGvC,KAAK,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,KAAK,CAAC2B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAG3C,KAAK,CAAC2B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAG7C,KAAK,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGjD,KAAK,CAAC2B,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGnD,KAAK,CAAC2B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMyB,QAAQ,GAAGjD,WAAW,CAAC,CAAC;;EAE9B;EACAH,KAAK,CAACqD,SAAS,CAAC,MAAM;IACpB,IAAIP,QAAQ,EAAE;MACZQ,OAAO,CAACC,GAAG,CAAC,CAACxC,GAAG,CAACyC,cAAc,CAAC,CAAC,EAAEzC,GAAG,CAAC0C,eAAe,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,CAAC,CAACC,QAAQ,EAAEC,SAAS,CAAC,KAAK;QAC/BrB,cAAc,CAACoB,QAAQ,CAAC;QACxBlB,QAAQ,CAACmB,SAAS,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;;EAEd;EACA9C,KAAK,CAACqD,SAAS,CAAC,MAAM;IACpB,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C;IACA;IACA,IAAIF,KAAK,EAAC;MACR5C,UAAU,CAAC4C,KAAK,CAAC,CACdN,IAAI,CAAES,GAAG,IAAK;QACb,IAAIA,GAAG,EAAE;UACPpB,WAAW,CAAC,IAAI,CAAC;UACjBE,QAAQ,CAACkB,GAAG,CAACC,IAAI,CAACpB,KAAK,CAAC;UACxBI,QAAQ,CAAC,GAAG,EAAE;YAACiB,OAAO,EAAE;UAAI,CAAC,CAAC;QAChC;MACF,CAAC,CAAC,CACDR,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASO,qBAAqBA,CAAA,EAAG;IAC/BvC,sBAAsB,CAAC,IAAI,CAAC;EAC9B;;EAEA;EACA,SAASwC,sBAAsBA,CAAA,EAAG;IAChC7C,uBAAuB,CAAC,IAAI,CAAC;EAC/B;;EAEA;EACA,SAAS8C,mBAAmBA,CAAA,EAAG;IAC7B3C,oBAAoB,CAAC,IAAI,CAAC;EAC5B;;EAEA;EACA,SAAS4C,qBAAqBA,CAACC,IAAI,EAAE;IACnCzC,sBAAsB,CAAC,IAAI,CAAC;IAC5BY,eAAe,CAAC6B,IAAI,CAAC;EACvB;;EAEA;EACA,SAASC,oBAAoBA,CAAA,EAAG;IAC9BxC,oBAAoB,CAAC,IAAI,CAAC;EAC5B;;EAEA;EACA,SAASyC,eAAeA,CAACF,IAAI,EAAE;IAC7B/B,eAAe,CAAC+B,IAAI,CAAC;EACvB;;EAEA;EACA,SAASG,cAAcA,CAAA,EAAG;IACxBnD,uBAAuB,CAAC,KAAK,CAAC;IAC9BG,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,oBAAoB,CAAC,KAAK,CAAC;IAC3BQ,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB;;EAEA;EACA,SAASiC,YAAYA,CAACC,OAAO,EAAE;IAC7B;IACA1C,aAAa,CAAC,IAAI,CAAC;IACnB0C,OAAO,CAAC,CAAC,CACNrB,IAAI,CAACmB,cAAc,CAAC,CACpBhB,KAAK,CAACC,OAAO,CAACC,KAAK;IACpB;IAAA,CACCiB,OAAO,CAAC,MAAM3C,aAAa,CAAC,KAAK,CAAC,CAAC;EACxC;;EAEA;EACA,SAAS4C,cAAcA,CAACP,IAAI,EAAE;IAC5B,SAASQ,WAAWA,CAAA,EAAG;MACrB,MAAMC,OAAO,GAAGT,IAAI,CAACU,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKjD,WAAW,CAACiD,GAAG,CAAC;MACjE;MACA,OAAOxE,GAAG,CAACyE,oBAAoB,CAACd,IAAI,CAACa,GAAG,EAAE,CAACJ,OAAO,CAAC,CAChDzB,IAAI,CAAE+B,OAAO,IAAK;QACjBhD,QAAQ,CAAEiD,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACL,GAAG,KAAKb,IAAI,CAACa,GAAG,GAAGE,OAAO,GAAGG,CAAE,CAAC,CAAC;MAC3E,CAAC,CAAC,CACD/B,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;IACAe,YAAY,CAACI,WAAW,CAAC;EAC3B;;EAEA;EACA,SAASW,gBAAgBA,CAACnB,IAAI,EAAE;IAC9B,SAASQ,WAAWA,CAAA,EAAG;MACrB,OAAOnE,GAAG,CAAC+E,UAAU,CAACpB,IAAI,CAACa,GAAG,CAAC,CAC5B7B,IAAI,CAAC,MAAM;QACVjB,QAAQ,CAAEiD,KAAK,IAAKA,KAAK,CAACK,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACL,GAAG,KAAKb,IAAI,CAACa,GAAG,CAAC,CAAC;MAC9D,CAAC,CAAC,CACD1B,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;IACAe,YAAY,CAACI,WAAW,CAAC;EAC3B;;EAEA;EACA,SAASc,gBAAgBA,CAACC,WAAW,EAAE;IACrC,SAASf,WAAWA,CAAA,EAAG;MACrB,OAAOnE,GAAG,CAACmF,WAAW,CAACD,WAAW,CAAC,CAChCvC,IAAI,CAAEC,QAAQ,IAAK;QAClBpB,cAAc,CAACoB,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDE,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;IACAe,YAAY,CAACI,WAAW,CAAC;EAC3B;;EAEA;EACA,SAASiB,kBAAkBA,CAACC,UAAU,EAAE;IACtC,SAASlB,WAAWA,CAAA,EAAG;MACrB,OAAOnE,GAAG,CAACsF,aAAa,CAACD,UAAU,CAAC,CACjC1C,IAAI,CAAEC,QAAQ,IAAK;QAClBpB,cAAc,CAACoB,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDE,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;IACAe,YAAY,CAACI,WAAW,CAAC;EAC3B;;EAEA;EACA,SAASoB,oBAAoBA,CAACF,UAAU,EAAE;IACxC,SAASlB,WAAWA,CAAA,EAAG;MACrB,OAAOnE,GAAG,CAACwF,WAAW,CAACH,UAAU,CAAC,CAC/B1C,IAAI,CAAE+B,OAAO,IAAK;QACjBhD,QAAQ,CAAC,CAACgD,OAAO,EAAE,GAAGjD,KAAK,CAAC,CAAC;MAC/B,CAAC,CAAC,CACDqB,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB;IACAe,YAAY,CAACI,WAAW,CAAC;EAC3B;;EAEE;EACA,SAASsB,cAAcA,CAACxD,KAAK,EAAEyD,QAAQ,EAAE;IACvCvF,QAAQ,CAAC8B,KAAK,EAAEyD,QAAQ,CAAC,CACxB/C,IAAI,CAAES,GAAG,IAAK;MACb,IAAIA,GAAG,EAAE;QACPhB,aAAa,CAAC,IAAI,CAAC;QACnBwB,oBAAoB,CAAC,CAAC;QACtBvB,QAAQ,CAAC,UAAU,EAAE;UAACiB,OAAO,EAAE;QAAI,CAAC,CAAC;MACvC,CAAC,MAAM;QACLM,oBAAoB,CAAC,CAAC;QACtBxB,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,CACDU,KAAK,CAAC,MAAM;MACXc,oBAAoB,CAAC,CAAC;MACtBxB,aAAa,CAAC,KAAK,CAAC;MACpBW,OAAO,CAACC,KAAK,CAAC,CAAC;IACjB,CAAC,CAAC;EACJ;;EAEA;EACA,SAAS2C,cAAcA,CAAA,EAAG;IACxB3D,WAAW,CAAC,IAAI,CAAC;EACnB;;EAEA;EACA,SAAS4D,WAAWA,CAAC3D,KAAK,EAAEyD,QAAQ,EAAE;IACpCtF,SAAS,CAAC6B,KAAK,EAAEyD,QAAQ,CAAC,CACzB/C,IAAI,CAAEU,IAAI,IAAK;MACd,IAAIA,IAAI,CAACJ,KAAK,EAAE;QACdf,QAAQ,CAACD,KAAK,CAAC;QACf0D,cAAc,CAAC,CAAC;QAChBtD,QAAQ,CAAC,GAAG,EAAE;UAACiB,OAAO,EAAE;QAAI,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,CACDR,KAAK,CAAC,MAAM;MACXd,WAAW,CAAC,KAAK,CAAC;MAClB4B,oBAAoB,CAAC,CAAC;MACtBb,OAAO,CAACC,KAAK,CAAC,CAAC;IACjB,CAAC,CAAC;EACJ;;EAEA;EACA,SAAS6C,YAAYA,CAAA,EAAG;IACtB7D,WAAW,CAAC,KAAK,CAAC;IAClBkB,YAAY,CAAC4C,UAAU,CAAC,OAAO,CAAC;IAChCzD,QAAQ,CAAC,UAAU,CAAC;EACtB;;EAEF;EACA;EACA,oBACE9B,OAAA,CAACN,kBAAkB,CAAC8F,QAAQ;IAACC,KAAK,EAAEzE,WAAY;IAAA0E,QAAA,eAC9C1F,OAAA;MAAK2F,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnB1F,OAAA,CAAClB,MAAM;QAAC8G,QAAQ,EAAEN,YAAa;QAAC5D,KAAK,EAAEA;MAAM;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE/ChG,OAAA,CAACpB,MAAM;QAAA8G,QAAA,gBACL1F,OAAA,CAACrB,KAAK;UAACsH,IAAI,EAAC,UAAU;UAACC,OAAO,eAAElG,OAAA,CAACR,QAAQ;YAAC2G,UAAU,EAAEjB;UAAe;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3EhG,OAAA,CAACrB,KAAK;UAACsH,IAAI,EAAC,UAAU;UAACC,OAAO,eAAElG,OAAA,CAACT,KAAK;YAAC6G,OAAO,EAAEf;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAIlEhG,OAAA,CAACrB,KAAK;UACJsH,IAAI,EAAC,GAAG;UACRC,OAAO,eAAElG,OAAA,CAACL,qBAAqB;YAC7B6B,QAAQ,EAAEA,QAAS;YACnB0E,OAAO,EAAEnH,IAAK;YACZsH,YAAY,EAAErD,qBAAsB;YACpCsD,aAAa,EAAErD,sBAAuB;YACtCsD,UAAU,EAAErD,mBAAoB;YAChCsD,WAAW,EAAElD,eAAgB;YAC7BmD,UAAU,EAAE9C,cAAe;YAC3B+C,YAAY,EAAEvD,qBAAsB;YACpCjC,KAAK,EAAEA;UAAM;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAEThG,OAAA,CAAChB,MAAM;QAAA6G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVhG,OAAA,CAACV,WAAW;QACVqH,MAAM,EAAE/F,iBAAkB;QAC1BgG,OAAO,EAAErD,cAAe;QACxBsD,WAAW,EAAEjF;MAAW;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFhG,OAAA,CAACZ,UAAU;QAACgE,IAAI,EAAEhC,YAAa;QAACwF,OAAO,EAAErD;MAAe;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DhG,OAAA,CAACf,gBAAgB;QACf0H,MAAM,EAAExG,sBAAuB;QAC/ByG,OAAO,EAAErD,cAAe;QACxBuD,YAAY,EAAEpC,gBAAiB;QAC/B5D,YAAY,EAAEA;MAAa;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhG,OAAA,CAACd,eAAe;QACdyH,MAAM,EAAEnG,qBAAsB;QAC9BoG,OAAO,EAAErD,cAAe;QACxBwD,cAAc,EAAElC,kBAAmB;QACnC/D,YAAY,EAAEA;MAAa;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhG,OAAA,CAACb,aAAa;QACZwH,MAAM,EAAErG,mBAAoB;QAC5BsG,OAAO,EAAErD,cAAe;QACxBgD,UAAU,EAAEvB,oBAAqB;QACjClE,YAAY,EAAEA;MAAa;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhG,OAAA,CAACX,eAAe;QACdsH,MAAM,EAAEjG,qBAAsB;QAC9BkG,OAAO,EAAErD,cAAe;QACxBzC,YAAY,EAAEA,YAAa;QAC3BsC,IAAI,EAAE9B,YAAa;QACnB0F,YAAY,EAAEzC;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAAC9F,EAAA,CApRQD,GAAG;EAAA,QAeOpB,WAAW;AAAA;AAAAoI,EAAA,GAfrBhH,GAAG;AAsRZ,eAAeA,GAAG;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}