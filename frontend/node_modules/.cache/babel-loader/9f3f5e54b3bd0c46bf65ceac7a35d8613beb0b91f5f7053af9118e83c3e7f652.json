{"ast":null,"code":"import _classCallCheck from\"/Users/a1/Desktop/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/a1/Desktop/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl;_classCallCheck(this,Api);this._baseUrl=baseUrl;}//Проверка\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0439! \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}//Универсальный метода запроса\n},{key:\"_request\",value:function _request(url,options){return fetch(url,options).then(this._checkResponse);}//Загрузка информации о пользователе с сервера\n},{key:\"getProfileInfo\",value:function getProfileInfo(){return this._request(\"\".concat(this._baseUrl,\"/users/me\"),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});}//Загрузка карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return this._request(\"\".concat(this._baseUrl,\"/cards\"),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});}//Редактирование профиля\n},{key:\"setUserInfo\",value:function setUserInfo(dataUser){return this._request(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({name:dataUser.name,about:dataUser.about})});}//Обновление аватара пользователя\n},{key:\"setUserAvatar\",value:function setUserAvatar(dataUser){return this._request(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({avatar:dataUser.avatar})});}//Добавление новой карточки\n},{key:\"postNewCard\",value:function postNewCard(dataCard){return this._request(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({name:dataCard.name,link:dataCard.link})});}//добавление и удаление лайков\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this._request(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});}else{return this._request(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});}}//Удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){return this._request(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});}}]);return Api;}();//https://mesto.nomoreparties.co/v1/cohort-69\nexport var api=new Api({// baseUrl: 'http://localhost:3000',\nbaseUrl:'https://api.mesto.irena.nomoredomainsrocks.ru'});","map":{"version":3,"names":["Api","_ref","baseUrl","_classCallCheck","_baseUrl","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","options","fetch","then","getProfileInfo","headers","localStorage","getItem","getInitialCards","setUserInfo","dataUser","method","body","JSON","stringify","name","about","setUserAvatar","avatar","postNewCard","dataCard","link","changeLikeCardStatus","cardId","isLiked","deleteCard","api"],"sources":["/Users/a1/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl }) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  //Проверка\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ой! Ошибка: ${res.status}`);\r\n  }\r\n\r\n  //Универсальный метода запроса\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse)\r\n  }\r\n\r\n  //Загрузка информации о пользователе с сервера\r\n  getProfileInfo() {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      headers: { \r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n  }\r\n\r\n  //Загрузка карточек с сервера\r\n  getInitialCards() {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      headers: { \r\n        'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n      }\r\n    })\r\n  }\r\n\r\n  //Редактирование профиля\r\n  setUserInfo(dataUser) {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: dataUser.name,\r\n        about: dataUser.about,\r\n      })\r\n    })\r\n  }\r\n\r\n  //Обновление аватара пользователя\r\n  setUserAvatar(dataUser) {\r\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: dataUser.avatar,\r\n      })\r\n    })\r\n  }\r\n\r\n  //Добавление новой карточки\r\n  postNewCard(dataCard) {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: dataCard.name,\r\n        link: dataCard.link,\r\n      })\r\n    })\r\n  }\r\n\r\n  //добавление и удаление лайков\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'PUT',\r\n        headers: { \r\n          'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n        }\r\n      })\r\n    } else {\r\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'DELETE',\r\n        headers: { \r\n          'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  //Удаление карточки\r\n  deleteCard(cardId) {\r\n    return this._request(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: { \r\n        'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//https://mesto.nomoreparties.co/v1/cohort-69\r\nexport const api = new Api({\r\n  // baseUrl: 'http://localhost:3000',\r\n  baseUrl: 'https://api.mesto.irena.nomoredomainsrocks.ru',\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}